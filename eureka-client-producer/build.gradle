buildscript {
    ext {
        springBootVersion = '2.0.3.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
//        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
//apply plugin: 'docker'


bootJar {
    baseName = 'eureka-client-producer'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/libs-milestone' }
}

//task buildDocker(type: Docker, dependsOn: build) {
//    applicationName = jar.baseName
//    dockerfile = file('src/main/docker/Dockerfile')
//    doFirst {
//        copy {
//            from bootJar //WARNING: should copy the bootJar result
//            into stageDir
//        }
//    }
//}

tasks.withType(JavaCompile) {
    options.compilerArgs.add("-Xlint:unchecked")
}

ext {
    springCloudVersion = 'Finchley.RELEASE'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('io.springfox:springfox-swagger2:2.8.0')
    compile('io.springfox:springfox-swagger-ui:2.8.0')
    compile('javax.xml.bind:jaxb-api:+')
    compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
    compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:+')
    compile('net.sourceforge.jtds:jtds:+')
//compile('org.springframework.boot:spring-boot-starter-data-jpa')
//compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2')
//runtime('mysql:mysql-connector-java')
    compileOnly('org.projectlombok:lombok')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-server')
//testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
}
